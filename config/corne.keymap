/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
	behaviors {
		tdyo: tap_dance_yo {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_YO";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp T>, <&kp GRAVE>;
		};

		tdtz: tap_dance_tz {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_TZ";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp M>, <&kp RBKT>;
		};

		tdye: tap_dance_ye {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_YE";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp SEMI>, <&kp SQT>;
		};

		tdha: tap_dance_ha {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE_HA";
			#binding-cells = <0>;
			tapping-term-ms = <200>;
			bindings = <&kp P>, <&kp LBKT>;
		};
	};
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------
// |ESC     |Q       |W       |E       |R       |T       |       |Y       |U       |I       |O       |P       |BKSP    |
// |SHFT    |A       |S       |D       |F       |G       |       |H       |J       |K       |L       |;       |SHFT    |
// |CTRL    |Z       |X       |C       |V       |B       |       |N       |M       |,       |.       |/       |CTRL    |
//                            |GUI     |ALT     |SPC (NL)|       |ENT (NR)|ALT     |GUI     |
                        bindings = <
&kp ESC     &kp Q       &kp W       &kp E       &kp R       &tdyo                    &kp Y           &kp U       &kp I        &kp O       &tdha       &kp BSPC
&kp LSHFT   &kp A       &kp S       &kp D       &kp F       &kp G                    &kp H           &kp J       &kp K        &kp L       &tdye       &kp RSHFT
&kp LCTRL   &kp Z       &kp X       &kp C       &kp V       &kp B                    &kp N           &tdtz       &kp COMMA    &kp DOT     &kp FSLH    &kp RCTRL
                                    &kp LGUI    &kp LALT    &lt 1 SPACE              &lt 2 RET       &kp RALT    &kp RGUI
                        >;
                };
                numb_l_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------
// |TAB     |1       |2       |3       |4       |5       |       |[       |]       |UP      |(       |)       |Del     |
// |        |6       |7       |8       |9 (SM)  |0       |       |=       |LFT     |DWN     |RGT     |:       |        |
// |        |/       |*       |-       |+       |.       |       |{       |}       |<       |>       |?       |        |
//                            |        |        |        |       |ENT (CM)|        |        |
                        bindings = <
&kp TAB   &kp N1     &kp N2     &kp N3      &kp N4          &kp N5                 &kp LBKT         &kp RBKT          &kp UP      &kp LPAR    &kp RPAR   &kp DEL
&trans    &kp N6     &kp N7     &kp N8      &lt 3 N9        &kp N0                 &kp EQUAL        &lt LEFT          &kp DOWN    &kp RIGHT   &kp COLON  &trans
&trans    &kp FSLH   &kp STAR   &kp MINUS   &kp PLUS        &kp DOT                &kp LBRC         &kp RBRC          &kp LT      &kp GT      &kp QMARK  &trans
                                &trans      &trans          &trans                 &lt 4 RET        &trans            &trans
                        >;
                };
                numb_r_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------
// |TAB     |1       |2       |3       |4       |5       |       |[       |]       |UP      |(       |)       |Del     |
// |        |6       |7       |8       |9       |0       |       |=       |LFT (SM)|DWN     |RGT     |:       |        |
// |        |/       |*       |-       |+       |.       |       |{       |}       |<       |>       |?       |        |
//                            |        |        |SPC (CM)|       |        |        |        |
                        bindings = <
&kp TAB   &kp N1     &kp N2     &kp N3      &kp N4          &kp N5                 &kp LBKT         &kp RBKT          &kp UP      &kp LPAR    &kp RPAR   &kp DEL
&trans    &kp N6     &kp N7     &kp N8      &lt N9          &kp N0                 &kp EQUAL        &lt 3 LEFT        &kp DOWN    &kp RIGHT   &kp COLON  &trans
&trans    &kp FSLH   &kp STAR   &kp MINUS   &kp PLUS        &kp DOT                &kp LBRC         &kp RBRC          &kp LT      &kp GT      &kp QMARK  &trans
                                &trans      &trans          &lt 4 SPACE            &trans           &trans            &trans
                        >;
                };
                symbol_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------
// |        |F1      |F2      |F3      |F4      |F5      |       |`       |~       |&       |^       |\       |        |
// |        |F6      |F7      |F8      |F9      |F10     |       |"       |#       |$       |_       ||       |        |
// |        |F11     |F12     |F13     |F14     |F15     |       |'       |@       |%       |        |!       |        |
//                            |        |        |SPC (CM)|       |ENT (CM)|        |        |
                        bindings = <
&trans   &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                 &kp GRAVE         &kp TILDE  &kp AMPS    &kp CARET   &kp BSLH    &trans
&trans   &kp F6    &kp F7    &kp F8    &kp F9    &kp F10                &kp DQT           &kp HASH   &kp DLLR    &kp UNDER   &kp PIPE    &trans
&trans   &kp F11   &kp F12   &kp F13   &kp F14   &kp F15                &kp SQT           &kp AT     &kp PRCNT   &none       &kp EXCL    &trans
                             &trans    &trans    &lt 4 SPACE            &lt 4 RET         &trans     &trans
                        >;
                };
                command_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------
// |        |F16     |F17     |F18     |F19     |OUT_TOG |       |VolDwn  |VolUp   |PgUp    |SkpBck  |SkpFrw  |        |
// |        |BTCLR   |BT1     |BT2     |BT3     |BT4     |       |Mute    |Home    |PgDn    |End     |PlayPaus|        |
// |        |LayCLR  |LayX1   |LayX2   |LayX3   |LayX4   |       |Insert  |PrtScr  |Pause   |Caps    |ScrLock |        |
//                            |        |        |        |       |        |        |        |
                        bindings = <
&trans   &kp F16     &kp F17       &kp F18       &kp F19       &out OUT_TOG          &kp C_VOL_DN  &kp C_VOL_UP  &kp PG_UP       &kp C_PREV  &kp C_NEXT   &trans
&trans   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &kp C_MUTE    &kp HOME      &kp PG_DN       &kp END     &kp C_PP     &trans
&trans   &none       &none         &none         &none         &none                 &kp INS       &kp PSCRN     &kp PAUSE_BREAK &kp CAPS    &kp SLCK     &trans
                                   &trans        &trans        &trans                &trans        &trans        &trans
                        >;
                };
        };
};
